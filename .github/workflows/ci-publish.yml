name: ci-publish

on:
  pull_request:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"  # e.g., v1.2.3 or v1.2.3rc1 (we'll filter prereleases below)

jobs:
  test:
    name: Tests (ruff/mypy/pytest)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install package (dev)
        run: |
          python -m pip install -U pip
          pip install -e ".[dev]"

      - name: Lint
        run: python -m ruff check src tests

      - name: Type-check
        run: python -m mypy src

      - name: Tests
        run: python -m pytest -q

  build-and-publish:
    name: Build & Publish to PyPI (Trusted Publishing)
    needs: [test]
    runs-on: ubuntu-latest
    # Only on FINAL releases (exclude pre-releases like rc, a, b, dev)
    if: startsWith(github.ref, 'refs/tags/v') &&
      !contains(github.ref_name, 'rc') &&
      !contains(github.ref_name, 'a')  &&
      !contains(github.ref_name, 'b')  &&
      !contains(github.ref_name, 'dev')

    permissions:
      id-token: write   # REQUIRED for PyPI Trusted Publishing (OIDC)
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build sdist/wheel
        run: |
          python -m pip install -U build
          python -m build

      - name: Validate distribution (twine check)
        run: |
          python -m pip install -U twine
          python -m twine check dist/*

      - name: Publish to PyPI via OIDC
        uses: pypa/gh-action-pypi-publish@release/v1
        # No token when Trusted Publishing is configured in PyPI
